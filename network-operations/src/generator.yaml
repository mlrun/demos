kind: remote
metadata:
  name: nuclio-generator
  tag: ''
  hash: 5fab239d130f21477072b6a34fe1b74065148e0a
  project: default
spec:
  command: ''
  args: []
  image: ''
  description: ''
  min_replicas: 1
  max_replicas: 4
  env: []
  config:
    spec.triggers.cron:
      kind: cron
      attributes:
        interval: 1m
  base_spec:
    apiVersion: nuclio.io/v1
    kind: Function
    metadata:
      annotations:
        nuclio.io/generated_by: function generated from /User/mlrun-release/demos/network-operations/notebooks/generator.ipynb
      labels: {}
      name: nuclio-generator
    spec:
      build:
        commands:
        - python -m pip install pyyaml
        - python -m pip install pyarrow
        - python -m pip install pandas
        - python -m pip install pytimeparse
        - python -m pip install v3io_frames --upgrade
        - python -m pip install -i https://test.pypi.org/simple/ v3io-generator
        - python -m pip install faker
        functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IG9zCmltcG9ydCB0aW1lCmltcG9ydCB5YW1sCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IGl0ZXJ0b29scwppbXBvcnQgZGF0ZXRpbWUKCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKCmZyb20gdjNpb19nZW5lcmF0b3IgaW1wb3J0IG1ldHJpY3NfZ2VuZXJhdG9yLCBkZXBsb3ltZW50X2dlbmVyYXRvcgoKZGVmIF9jcmVhdGVfZGVwbG95bWVudCgpOgogICAgcHJpbnQoJ2NyZWF0aW5nIGRlcGxveW1lbnQnKQogICAgZGVwX2dlbiA9IGRlcGxveW1lbnRfZ2VuZXJhdG9yLmRlcGxveW1lbnRfZ2VuZXJhdG9yKCkKICAgIGZha2VyPWRlcF9nZW4uZ2V0X2Zha2VyKCkKCiAgICBkZXBfZ2VuLmFkZF9sZXZlbChuYW1lPSdjb21wYW55JyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLmNvbXBhbnkpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGF0YV9jZW50ZXInLG51bWJlcj0yLGxldmVsX3R5cGU9ZmFrZXIuc3RyZWV0X25hbWUpCiAgICBkZXBfZ2VuLmFkZF9sZXZlbCgnZGV2aWNlJyxudW1iZXI9MixsZXZlbF90eXBlPWZha2VyLm1zaXNkbikKCiAgICBkZXBsb3ltZW50X2RmID0gZGVwX2dlbi5nZW5lcmF0ZV9kZXBsb3ltZW50KCkKICAgIHJldHVybiBkZXBsb3ltZW50X2RmCgpkZWYgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICByZXR1cm4gb3MucGF0aC5leGlzdHMoZicvdjNpby9iaWdkYXRhL3twYXRofScpCgpkZWYgX2dldF9kZXBsb3ltZW50X2Zyb21fa3YoY2xpZW50LCBwYXRoKToKICAgIHByaW50KGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGNvbnRleHQubG9nZ2VyLmRlYnVnKGYnUmV0cmlldmluZyBkZXBsb3ltZW50IGZyb20ge3BhdGh9JykKICAgIGRlcGxveW1lbnRfZGYgPSBjbGllbnQucmVhZChiYWNrZW5kPSdrdicsIHRhYmxlPXBhdGgpCiAgICAKICAgIGRlcGxveW1lbnRfZGYuaW5kZXgubmFtZSA9ICdkZXZpY2UnCiAgICBkZXBsb3ltZW50X2RmID0gZGVwbG95bWVudF9kZi5yZXNldF9pbmRleCgpCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIF9zYXZlX2RlcGxveW1lbnRfdG9fa3YocGF0aCwgZGYsIGNsaWVudD1Ob25lKToKICAgIGNsaWVudC53cml0ZShiYWNrZW5kPSdrdicsIHRhYmxlPSduZXRvcHNfZGV2aWNlcycsZGZzPWRmLCBpbmRleF9jb2xzPVsnZGV2aWNlJ10pCgpkZWYgZ2V0X29yX2NyZWF0ZV9kZXBsb3ltZW50KHBhdGgsIHNhdmVfdG9fY2xvdWQ9RmFsc2UsIGNsaWVudD1Ob25lKToKICAgIGlmIGNsaWVudCBhbmQgX2lzX2RlcGxveW1lbnRfZXhpc3QocGF0aCk6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9nZXRfZGVwbG95bWVudF9mcm9tX2t2KGNsaWVudCwgcGF0aCkKICAgIGVsc2U6CiAgICAgICAgZGVwbG95bWVudF9kZiA9IF9jcmVhdGVfZGVwbG95bWVudCgpCiAgICAgICAgCiAgICAgICAgaWYgY2xpZW50IGFuZCBzYXZlX3RvX2Nsb3VkOgogICAgICAgICAgICBfc2F2ZV9kZXBsb3ltZW50X3RvX2t2KHBhdGgsIGRlcGxveW1lbnRfZGYsIGNsaWVudCkKCiAgICByZXR1cm4gZGVwbG95bWVudF9kZgoKZGVmIHNldF9pbmRleGVzKGRmKToKICAgIGRmID0gZGYuc2V0X2luZGV4KFsndGltZXN0YW1wJywgJ2NvbXBhbnknLCAnZGF0YV9jZW50ZXInLCAnZGV2aWNlJ10pCiAgICByZXR1cm4gZGYKCmRlZiBzYXZlX21ldHJpY3NfdG9fdHNkYihjb250ZXh0LCBtZXRyaWNzOiBwZC5EYXRhRnJhbWUpOgogICAgcHJpbnQoJ1NhdmluZyBtZXRyaWNzIHRvIFRTREInKQogICAgCiAgICBjb250ZXh0LnYzZi53cml0ZSgndHNkYicsIGNvbnRleHQubWV0cmljc190YWJsZSwgbWV0cmljcykKCmRlZiBzYXZlX21ldHJpY3NfdG9fcGFycXVldChjb250ZXh0LCBtZXRyaWNzKToKICAgIHByaW50KCdTYXZpbmcgbWV0cmljcyB0byBQYXJxdWV0JykKICAgIGRmID0gcGQuY29uY2F0KGl0ZXJ0b29scy5jaGFpbihtZXRyaWNzKSkKICAgIAogICAgZGYgPSBkZi5yZXNldF9pbmRleCgpCiAgICBkZlsndGltZXN0YW1wJ10gPSBkZi5sb2NbOiwgJ3RpbWVzdGFtcCddLmFzdHlwZSgnZGF0ZXRpbWU2NFttc10nKQogICAgCiAgICBkZiA9IHNldF9pbmRleGVzKGRmKQogICAgCiAgICBmaXJzdF90aW1lc3RhbXAgPSBkZi5pbmRleFswXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBsYXN0X3RpbWVzdGFtcCA9IGRmLmluZGV4Wy0xXVswXS5zdHJmdGltZSgnJVklbSVkVCVIJU0lUycpCiAgICBmaWxlbmFtZSA9IGZpcnN0X3RpbWVzdGFtcCArICctJyArIGxhc3RfdGltZXN0YW1wICsgJy5wYXJxdWV0JwogICAgcHJpbnQoZmlsZW5hbWUpCiAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihjb250ZXh0Lm1ldHJpY3NfdGFibGUsIGZpbGVuYW1lKQogICAgcHJpbnQoZmlsZXBhdGgpCiAgICB3aXRoIG9wZW4oZmlsZXBhdGgsICd3YisnKSBhcyBmOgogICAgICAgIGRmLnRvX3BhcnF1ZXQoZikKCmRlZiBpc19kZXBsb3ltZW50X2luaXRpYWxpemVkKGNvbnRleHQpOgogICAgcmV0dXJuIGhhc2F0dHIoY29udGV4dCwgJ21ldHJpY19nZW5lcmF0b3InKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIAogICAgc2F2ZV90b190c2RiID0gKGludChvcy5nZXRlbnYoJ1NBVkVfVE9fVFNEQicsIDEpKSA9PSAxKQogICAgCiAgICBtZXRyaWNzX3RhYmxlID0gb3MuZ2V0ZW52KCdTQVZFX1RPJywgJ25ldG9wc19tZXRyaWNzJykKICAgIHNldGF0dHIoY29udGV4dCwgJ21ldHJpY3NfdGFibGUnLCBtZXRyaWNzX3RhYmxlKSAKCiAgICBpZiBzYXZlX3RvX3RzZGI6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBUU0RCJykKICAgICAgICBjbGllbnQgPSB2M2YuQ2xpZW50KGFkZHJlc3M9J2ZyYW1lc2Q6ODA4MScsIGNvbnRhaW5lcj0nYmlnZGF0YScpCiAgICAgICAgCiAgICAgICAgY2xpZW50LmNyZWF0ZSgndHNkYicsIG1ldHJpY3NfdGFibGUsIHJhdGU9JzEvcycsIGlmX2V4aXN0cz0xKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3RzZGIpCiAgICAKICAgIGVsc2U6CiAgICAgICAgY29udGV4dC5sb2dnZXIuZGVidWcoJ1NhdmluZyB0byBQYXJxdWV0JykKICAgICAgICBjbGllbnQgPSBOb25lCiAgICAgICAgICAKICAgICAgICBmaWxlcGF0aCA9IG9zLnBhdGguam9pbihtZXRyaWNzX3RhYmxlKQogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhmaWxlcGF0aCk6CiAgICAgICAgICAgIG9zLm1ha2VkaXJzKGZpbGVwYXRoKQogICAgICAgIAogICAgICAgIHNldGF0dHIoY29udGV4dCwgJ3dyaXRlJywgc2F2ZV9tZXRyaWNzX3RvX3BhcnF1ZXQpCiAgICAKICAgICAgICAgIAogICAgc2Vjc190b19nZW5lcmF0ZSA9IG9zLmdldGVudignU0VDU19UT19HRU5FUkFURScsIDEwKQogICAgc2V0YXR0cihjb250ZXh0LCAnc2Vjc190b19nZW5lcmF0ZScsIHNlY3NfdG9fZ2VuZXJhdGUpCiAgICAKICAgICAKICAgIAogICAgZGVwbG95bWVudF9kZiA9IGdldF9vcl9jcmVhdGVfZGVwbG95bWVudChvcy5lbnZpcm9uWydERVBMT1lNRU5UX1RBQkxFJ10sIG9zLmVudmlyb25bJ1NBVkVfREVQTE9ZTUVOVCddLCBjbGllbnQpCiAgICAKICAgIGRlcGxveW1lbnRfZGZbJ2NwdV91dGlsaXphdGlvbiddID0gNzAKICAgIGRlcGxveW1lbnRfZGZbJ2xhdGVuY3knXSA9IDAKICAgIGRlcGxveW1lbnRfZGZbJ3BhY2tldF9sb3NzJ10gPSAwCiAgICBkZXBsb3ltZW50X2RmWyd0aHJvdWdocHV0J10gPSAyOTAKICAgIGRlcGxveW1lbnRfZGYuaGVhZCgpCiAgICAKICAgIHdpdGggb3Blbihvcy5nZXRlbnYoJ01FVFJJQ1NfQ09ORklHVVJBVElPTl9GSUxFUEFUSCcsICcvc3JjL21ldHJpY3NfY29uZmlndXJhdGlvbi55YW1sJyksICdyJykgYXMgZjoKICAgICAgICBtZXRyaWNzX2NvbmZpZ3VyYXRpb24gPSB5YW1sLmxvYWQoZikKICAgICAgICAKICAgIGluaXRpYWxfdGltZXN0YW1wID0gaW50KG9zLmdldGVudignaW5pdGlhbF90aW1lc3RhbXAnLCAoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCktZGF0ZXRpbWUudGltZWRlbHRhKGRheXM9MSkpLnRpbWVzdGFtcCgpKSkKICAgIG1ldF9nZW4gPSBtZXRyaWNzX2dlbmVyYXRvci5HZW5lcmF0b3JfZGYobWV0cmljc19jb25maWd1cmF0aW9uLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9oaWVyYXJjaHk9ZGVwbG95bWVudF9kZiwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxfdGltZXN0YW1wPWluaXRpYWxfdGltZXN0YW1wKQogICAgc2V0YXR0cihjb250ZXh0LCAnbWV0cmljX2dlbmVyYXRvcicsIG1ldF9nZW4pCiAgICAKICAgIHNldGF0dHIoY29udGV4dCwgJ3YzZicsIGNsaWVudCkKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgICAgIAogICAgbWV0cmljcyA9IGNvbnRleHQubWV0cmljX2dlbmVyYXRvci5nZW5lcmF0ZV9yYW5nZShzdGFydF90aW1lPWRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kX3RpbWU9ZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkrZGF0ZXRpbWUudGltZWRlbHRhKHNlY29uZHM9aW50KGNvbnRleHQuc2Vjc190b19nZW5lcmF0ZSkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNfZGY9VHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzX2l0ZXJhdG9yPVRydWUpCiAgICAKICAgIGNvbnRleHQud3JpdGUoY29udGV4dCwgbWV0cmljcykKCg==
        noBaseImagesPull: true
        baseImage: mlrun/ml-models
      env:
      - name: SAVE_DEPLOYMENT
        value: '1'
      - name: DEPLOYMENT_TABLE
        value: devices
      - name: METRICS_CONFIGURATION_FILEPATH
        value: '{src_path}/metric_configurations.yaml'
      - name: SAVE_TO
        value: '{data_path}'
      - name: SECS_TO_GENERATE
        value: '3600'
      - name: SAVE_TO_TSDB
        value: '0'
      handler: generator:handler
      runtime: python:3.6
      volumes: []
  source: ''
  build:
    commands: []
    code_origin: https://github.com/mlrun/demos#d8edc214d78cccaba36b4872e63f777ded6a0b63:nuclio-generator.ipynb
  default_handler: ''
verbose: false
